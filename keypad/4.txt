library IEEE;
use IEEE.STD_LOGIC_1164.ALL; use IEEE.STD_LOGIC_ARITH.ALL;
use IEEE.STD_LOGIC_UNSIGNED.ALL;


entity keypad is
Port ( clk	: in STD_LOGIC; rst	: in STD_LOGIC;
row	: inout STD_LOGIC_VECTOR (3 downto 0); col	: inout STD_LOGIC_VECTOR (3 downto 0);
digit	: out STD_LOGIC_VECTOR (3 downto 0); display: out STD_LOGIC_VECTOR (7 downto 0));
end keypad;


architecture Behavioral of keypad is
TYPE STATE_TYPE IS ( Col1Set, Col2Set, Col3Set, Col4Set ); SIGNAL coltest : STATE_TYPE;
SIGNAL data:STD_LOGIC_VECTOR (7 downto 0);
SIGNAL rowm:STD_LOGIC_VECTOR (3 downto 0); SIGNAL clock:STD_LOGIC;
begin



 
 

Process(clk,rst)
variable temp:integer range 1 to 10; begin
if(rst='0') then temp:=1;
elsif(rising_edge(clk)) then temp:=temp+1; if(temp=10) then
clock<= not clock; temp:=1;
end if; end if;
end process;





process(clock,rst) begin
if (rst='0') then coltest<=col1set; rowm<="1111"; data<=x"00";
elsif rising_edge (clock) then digit<="1111";
 
case coltest is
when col1set=> rowm<="0111";
case col is
when "0111"=>data<= x"C6";	C
when "1011"=>data<= x"A1";	D
when "1101"=>data<= x"86";	E
when "1110"=>data<= x"8E";	F
when others=>coltest<=col2set; end case;
when col2set=> rowm<="1011";
case col is
when "0111"=>data<= x"C0";	0
when "1011"=>data<= x"F9";	1
when "1101"=>data<= x"A4";	2
when "1110"=>data<= x"B0";	3
when others=>coltest<=col3set; end case;
when col3set=> rowm<="1101";
case col is
when "0111"=>data<= x"99";	4
when "1011"=>data<= x"92";	5
when "1101"=>data<= x"82";	6
when "1110"=>data<= x"F8";	7
when others=>coltest<=col4set; end case;
 
when col4set=> rowm <="1110";
case col is
when "0111"=>data<= x"80";	8
when "1011"=>data<= x"90";	9
when "1101"=>data<= x"88";	A
when "1110"=>data<= x"83";	B
when others=>coltest<=col1set; 
end case;
end case; 
end if;
end process;
 display<=data;
  row<=rowm;
 end Behavioral;
